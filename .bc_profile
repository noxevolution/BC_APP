#################################################################################################################################################################
#                                                                                                                                                               #
# Brand Communities User Attributes. For help on specifying values please see the end of this file.                                                             #
#                                                                                                                                                               #
#################################################################################################################################################################

# Color choices available to XY Plot Associations
# The user can't currently choose the color used for a new association. Instead, they are allocated in a round-robin fashion from this list of colors. The
# list can be as long as you like but best to keep it short as it's difficult for the operator to differentiate between colors that are even slightly similar
# to each other
self.colorPicker                 = [QColor ('red'), QColor ('green'), QColor ('orange'), QColor ('indigo'), QColor ('yellow'), QColor ('blue'), QColor ('violet')]

# Universe
self.moveTime                    = 500                    # The node animation time in milliseconds. This is the time it takes for a node to move to a new position 
self.baseCutoff                  = 0                      # master link cutoff (range is from 0 to 1)

# Node and edge appearances
self.nodeTextColor               = QColor (180, 180, 180) # Normal color of node text
self.nodeTextHighlightColor      = QColor (255, 255, 0)   #  - when highlighted
self.nodeOutlineColor            = QColor ('black')       # The border color of a node
self.backwashColor               = QColor (0, 0, 0, 60)   # Normal color of node label backwash
self.backwashHighlightColor      = QColor (0, 0, 0, 160)  #  - when node highlighted
self.centerNodeHighlightColor    = QColor ('magenta')     # The central node is highlighted in this color when the mouse passes over it.
self.linkPositiveColor           = QColor (0, 255, 0)     # Color of attractive link
self.linkPositiveHighlightColor  = QColor (127, 255, 127) #  - when highlighted
self.linkNegativeColor           = QColor (255, 0, 0)     # Color of repulsive link
self.linkNegativeHighlightColor  = QColor (255, 0, 127)   #  - when highlighted
self.xyBubbleEdgeColor           = QColor ('transparent') # The color of the bubble borders in the XY Graph
self.xyGridColor                 = QColor (127, 127, 127) # The color of the XY Graph's gridlines
self.xyWatermarkColor            = QColor (192, 192, 192) # The color of the time point display in the XY Graph background
self.xyDisplayBackgroundTint     = QColor ('white')       # The color of the XY Graph background when displaying XY data
self.xyTimeDisplayBackgroundTint = QColor (255, 230, 230) #  - and when displaying against time
self.clusterMarkerColor          = QColor ('blue')        # This is the color of the little circles that mark cluster centers in the cluster graph
self.xyNodeTextColor             = QColor ('black')       # The colour of the node label text in the XY Plot
self.xyHighlightedNodeTextColor  = QColor ('black')       #  - when highlighted
self.xynodeFontSize              = 20                     # Normal size of xy node text
self.xynodeHighlightFontSize     = 28                     #  - when node highlighted

# Graph appearance
self.busyIndicatorBrush          = QColor (0, 255, 0)     # The color of the 'busy' indicator
self.busyIndicatorPen            = QColor (255, 0, 0)     #  - the color of its border
self.eventBarColor               = QColor ('turquoise')   # The color of the event bars in the XY Plot
self.eventFontSize               = 6                      # The font size used to display event bars in the XY Graph
self.opaqueDiskBorderColor       = QColor (100, 100, 100) # The color of the opaque disk's border
self.galaxyBlueCircleColor       = QColor ('blue')        # The color of the two blue circles in the Galaxy plot
self.shortestLineWithArrowheads  = 20                     # Lines shorter that this number of pixels don't display arrowheads

# Tab pane appearance
self.tabBarColor                 = QColor (128, 128, 128) # The colour of the background of the graph selector tabs
self.tabBarFontSize              = 14                     # The font size of the graph selector tab labels
self.tabBarFontColor             = QColor (0, 0, 255)     # The colour of the graph selector tabs' font

# Database
#
# This holds the directory name of the most recent database you opened.
# Note that this value must be enclosed in double quotes and the double quote character is not allowed within it.
self.databasePath                = "/home/andy/Desktop/Dropbox/BC Data for dropbox/TestDatabases/V4.000"

# Performance
self.lotsOfLinks                 = 2000                   # If the operator tries to turn on the display of links and this would cause more than this number
                                                          # to be displayed he receives a warning
self.lotsOfNodesToCluster        = 400                    # If the operator tries to cluster more than this number of nodes he receives a warning

# Facilities control
# Byte Function Bits:  7____________  6____________  5_____________  4________________  3_______________  2_____  1_________________  0_____________
# 0    Tabs           |centrifuge    |network       |communities    |                  |                 |       |xyGraph            |analysis
# 1    Tools          |selectionTree |timeDimension |commonControls |layoutControls    |seekNode         |       |xyAssociations     | 
# 2    File menu      |open          |              |               |saveConfiguration |saveConfigToFile |       |loadConfigFromFile |commandLine
# 3    Analysis       |original      |average       |trend          |elasticity        |ruleBased        |future |addAndDelete       |dropOnCombobox
#
# NOTES:
# 1. You MUST have at least one tab showing. The network, communities and XY Graph tabs are only initialised when they are first shown; so if you display only one of these
#    three you will need to display the centrifuge (or at least one other tab).
# 2. If you disable ALL of the Tools, the View menu will not be displayed.
# 3. You cannot disable all options from the Analysis transform menu; you must have at least one of [original, average, trend, elasticity, ruleBased]
# 4. If you disable any of the above you will have to provide modified help texts.
# 5. Removing a facility does not change values in configuration files. Best start with no configuration file whenever you change this facilities control code,
#    unless you are specifically seeking to set up a predefined configuration that the user can exploit but not reconfigure (see 8. below).
# 6. This facilitiesKey value enables all settings at the time of writing: self.facilitiesKey = 0xe3fa9bff
# 7. If you are using this prototype as a development tool and you want to ensure you have access to all facilities as they are added, use this key: self.facilitiesKey = -1
# 8. Disabling a facility for a database with a configuration that uses that facility will not disable users' access to that facility. For example, suppose we disable
#    ruleBased and addAndDelete in the Analysis graph: the user will not be able to add new analysis graphs nor delete existing ones. But if a graph exists in the user's
#    configuration and it has been set up to use ruleBased, the user will have access to the rule-based tool.
self.facilitiesKey               = -1

# Rick's debug settings
self.debugDb                     = False
self.debugGr                     = False
self.debugTs                     = False
self.debugUi                     = False

#################################################################################################################################################################
#
# Colors
# ======
#
# By providing the constants in this file in the form of Python source text we have a lot of flexibility in how we can specify colors. The following forms are
# possible:
#
#       QColor (name)
#                       where name is one of the following: 'white', 'black', 'cyan', 'darkCyan', 'red', 'darkRed', 'magenta', 'darkMagenta', 'green',
#                                                           'darkGreen', 'yellow', 'darkYellow', 'blue', 'darkBlue', 'gray', 'darkGrey', 'lightGray'.
#                                  e.g. self.xyGridColor = QColor ('darkGreen')
#
#       QColor (rgb)
#                       where rgb is a hexadecimal coding of a RGB color in one of the following forms: '#rgb', '#rrggbb', '#rrrgggbbb', '#rrrrggggbbbb'.
#                                  e.g. self.nodeTextColor = QColor ('#0f0') # sets the node text colour to pure green
#
#       QColor ('transparent')
#                       makes this object completely invisible, though you can still interact with it using the mouse and keyboard in the normal way.
#                                  e.g. linkNegativeHighlightColor = QColor ('transparent')
#
#       QColor (red, green, blue)
#                       where red, green and blue are decimal numbers between zero and 255 that allow you control of each base color independently without
#                       needing to encode these values in hexadecimal.
#                                  e.g. self.xyWatermarkColor = QColor (255, 0, 0) # will make a very bright red watermark behind the XY Graph display
#
#       QColor (red, green, blue, transparency)
#                       Same as above but the transparency can also be specified. A transparency of 255 is perfectly opaque, whilst a transparency of zero
#                       is perfectly transparent (invisible).
#
# You can be very clever with this if you want and if you wish to be I refer you to the documentation for Qt on Nokia's website http://www.nokia.com. For
# example:
#
#       self.objectOneColor = QColor ('cyan)
#       self.objectTwoColor = QColor (0, 0, self.objectOneColor.red ())
#
#                       sets objectTwo's color to blue of the same brightness as the red component of objectOne's cyan color.
#                       It's probably best, though, to avoid being too clever.
#
#################################################################################################################################################################
#
# Font Sizes
# ==== =====
#
# Font sizes are specified in points, e.g. the value 8 represents 8pt.
#
#################################################################################################################################################################
